name: Code Check
on:
  pull_request:
    branches:
      - main

jobs:
  check_branch_name:
    runs-on: ubuntu-latest
    continue-on-error: false
    steps:
      - uses: actions/checkout@v3
      - name: Check branch name
        run: |
          # Get the name of the new branch
          NEW_BRANCH=$(git symbolic-ref --short HEAD)
          echo "$NEW_BRANCH"
          # Check if the new branch name matches the regex
          if ! echo "$NEW_BRANCH" | grep -E '^(feature|bugfix|chore|other)\/MEVO-([0-9]+)(.+)$'; then
            # If the new branch name does not match the regex, fail the workflow
            echo "Error: The new branch name does not match the required format."
            exit 1
          fi
          # If the new branch name matches the regex, continue with the rest of the workflow
          echo "The new branch name is in the required format."
  check_commit_messages:
    runs-on: ubuntu-latest
    continue-on-error: false
    needs: check_branch_name
    steps:
      - uses: actions/checkout@v3
      - name: Check commit messages
        run: |
          # Check the commit messages of the new branch
          if ! git log --oneline | grep -E '^(feature|bugfix|chore|other)\:MEVO-([0-9]+)(.+)$'; then
            # If the commit messages do not match the regex, fail the workflow
            echo "Error: The commit messages do not match the required format."
            exit 1
          fi
          
          # If the commit messages match the regex, continue with the rest of the workflow
          echo "The commit messages are in the required format."
  
  format:
    runs-on: ubuntu-latest
    continue-on-error: false
    needs: check_commit_messages
    steps:
      - uses: actions/checkout@v3
      - name: Use Flutter 3.3.10
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.3.10'
      - name: Run Flutter Format
        run: flutter format lib
      - name: Checkout Formatted Files
        run: git checkout -- .
      - name: Check if changes were made then commit and push
        run: |
          if ! git diff-index --quiet HEAD --; then
            git config --local user.email "action@github.com" && git config --local user.name "GitHub Action" && git commit -am "Format code"
            git push origin HEAD:${{ github.head_ref }} 
          fi
  analyze:
    runs-on: ubuntu-latest
    continue-on-error: false
    needs: format
    steps:
      - uses: actions/checkout@v3
      - name: Use Flutter 3.3.10
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.3.10'
      - name: Run Flutter Analyze
        run: flutter analyze
      - name: Check for Issues
        if: ${{ steps.analyze.outputs.exit-code != 0 }}
        run: exit 1

